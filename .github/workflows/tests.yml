name: "Tests"
on:
  pull_request:
    types: ['opened', 'synchronize', 'reopened', 'ready_for_review']
    branches:
      - master
      - stable
  push:
    branches:
      - master
    tags:
      - "v*"
  schedule:
    - cron: "0 4 * * *"

defaults:
  run:
    shell: bash -l {0}

jobs:
  tests:
    runs-on: ubuntu-latest
    name: "Tests"
    strategy:
      matrix:
        CONDA_PY:
          #- 3.9
          #- 3.8
          - 3.7
          - 2.7
        MINIMAL: [""]
        include:
          - CONDA_PY: 3.7
            MINIMAL: true

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: conda-incubator/setup-miniconda@v2
        with: 
          auto-update-python: true
          python-version: ${{ matrix.CONDA_PY }}
      - name: "Install requirements"
        env:
          MINIMAL: ${{ matrix.MINIMAL }}
        run: |
          if [ -z "$MINIMAL" ] ; then
            source devtools/conda_install_reqs.sh
          else
            python -m pip install -r devtools/minimal.txt \
                                  -r devtools/minimal_testing.txt
          fi
          python -m pip install autorelease
      - name: "Install"
        run: |
          python -m pip install --no-deps -e .
          python -c "import openpathsampling"
      - name: "Versions"
        run: conda list
      - name: "Autorelease check"
        run: python devtools/autorelease_check.py
      - name: "Unit Tests"
        env:
          PY_COLORS: "1"
        run: py.test -vv -s --cov --cov-report xml
      - name: "Tests: Experimental"
        if: matrix.MINIMAL == ''
        run: py.test openpathsampling/experimental/ -vv -s
      - name: "Report coverage"
        run: bash <(curl -s https://codecov.io/bash)
      - name: "Notebook tests"
        if: matrix.MINIMAL == ''
        run: |
          pushd examples/ && ./ipynbtests.sh || exit 1 && popd
      - name: "Deploy docs"
        if: matrix.CONDA_PY == '3.7' && matrix.MINIMAL == ''
        run: |
          echo "TODO"
